유효성 검사 등의 내용은 
자바스크립트로 처리.
부가적인 기능은 기본 기능 숙지 후에 

페이징 처리를 해볼 예정

노트북 어댑터 안가져와서 학원에 작업환경 셋팅을 해야함.
1. 이클립스 설치상태
2. 깃허브 프로젝트 clone 및 pull
3. 오라클, sql디벨로퍼, 톰캣 설치

-db는 새로 만들어야 하나


페이징처리)
쿼리문을 수정해야 함.
SELECT *n FROM NOTICE_TBL;

ROWNUM
ROWNUMBER 
를 이용하여 순번을 매기고 숫자를 끊어서 가지고 온다.
쿼리문을 통해 처리.

SELECT ROW_NUMBER() OVER(ORDER BY NOTICE_NO DESC) AS NUM, NOTICE_TBL.* FROM NOTICE_TBL;

문법이 낯설다.

NUM을 기준으로 WHERE 조건절로 바로 사용할 수 없고 
인라인뷰를 써야한다.

------------------------------
SELECT *
FROM(
SELECT ROW_NUMBER() OVER(ORDER BY NOTICE_NO DESC) AS NUM, NOTICE_TBL.* FROM NOTICE_TBL)
WHERE NUM BETWEEN 6 AND 10;
------------------------------
비트윈의 인자를 위치홀더로 사용하고
currntPage = n 으로 쿼리를 전달한다.
서블릿에서 currentPage 처리를 해주어야함. 

페이징 처리하는 값.
int recordCountPerPage = 5;
int start = currentPage*recordCountPerPage - (recordCountPerPage-1);


페이지 네비기능을 윟아여
DAO 에 getPageNavi 메소드를 만들고
전체 게시물의 갯수를 구할 수 있는 
totalCount메소드도 생성함. 

페이지의 갯수를 구하는 식. 몫 + 1

nList와 페이지 네비 정보를 함께 전달하기 위해서
VO를 생성하고 Map 형태로 옮긴다. 

openjdk 라이브러리 추가를 하지 않으니 에러가 나는 것이었음.
프로젝트 우클릭 - Properties - Java Build Path - Libraries -JRE System Library 추가

java.sql.SQLSyntaxErrorException: ORA-00913: too many values 디비 새로 만들고 에러 발생.

페이징 처리.
1. 쿼리문을 바꾸는 것 부터 시작
  쿼리문을 통해서 ROW_NUMBER() 함수를 사용하여 넘버링 된 데이터를 잘라서 출력한다.
 (OVER() 함수 알아보기) BETWEEN 을 이용하여 페이징을 해줌.
 BETWEEN 1 AND 5  -> 1~5번 게시물

2. pstmt의 위치홀더를 이용함. currentPage 값에 따라 달라지도록 한다.
  currentPage 값을 이용하여 start와 end값을 구하여 위치홀더에 적용한다.

3. 화면에서
 <a href=  ... ?currentPage=1>1</a> .... 하는 식으로 만들었었음.
-> ${pageNavi}
를 이용하여 구현. StringBuilder를 이용하여 상단의 <a>태그를 만들어줌

4.DAO에서 pageNavi메소드.  currentPage값에 따라서 1,2,3,4,5 /  6,7,8,9,10 / 11,12,13
같은 형태로 i를 반복할 수 있게 해주고 반복문과 sb.append를 이용하여준다.
sb.append 문자열을 반환함.
 4-1 4번의 계산을 위하여 필요한 총 게시물의 갯수를 구하는 메소드를 만듦

5.4에서 만든 문자열을 service로 넘김. 여기서 발생하는 문제는 객체도 전달하고 pageNavi문자열도
 전달해야 하는 것.  여기서 해결 방법은 두 가지가 있는데
 1. Map 을 사용하는 방법 2. VO를 만들어 사용하는 방법.
6. 화면까지 pageNavi값 ( 페이징네비게이션을 만들어주는 a태그) 를 전달해주고
  화면에서 el을 이용하여 출력.


페이징처리 2단계
[이전] [다음]  만들기.


댓글기능
파일업로드 다운로드 기능.

스프링으로 프로젝트를 할 때는 jdbc를 사용하지 않음. 


지금까지의 진도 및 로드맵
1.java
2.oracle
3.jdbc - 콘솔 출력
4.html&css - 콘솔 출력을 브라우저로
5.jsp/servlet - form태그 (jsp는뷰, servlet은 컨트롤러) -> mvc2패턴
6.JS, jQuery
7.Mybatis - JDBC 대체 실무에서 JDBC 안씀
8.Spring - Framework사용, Servlet 대체
9. Ajax, API, 라이브러리, Editor, ... (Final에서 사용)


ㅍvs코드로 자바스크립트 진행.
프론트만 하기에는 vs코드가 가볍고 빠르다.

페이징 기능 복습하자.


----------자바스크립트
<script></script> 태그

개발자 도구의 console 탭에서 확인할 수 있다.

자바스크립트를 이용한 프론트단에서 처리
